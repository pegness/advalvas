{#
/**
 * @file
 * Default theme implementation to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 *
 * @ingroup themeable
 */
#}

{% if view_mode == "teaser" %}
<article{{ attributes }}>
<div class="node-opinie">
  <span class="sub-date">
    {% set createdDate = node.getCreatedTime|format_date('short') %}
    {% trans %} {{ createdDate }} {% endtrans %}       
  </span>

  <h2 class="news-title">
    <a href="{{ url }}" rel="bookmark">{{ label }}</a>
  </h2>
  {% if content.field_subtiitle is not empty %}
      <div class="subtitle">{{ node.field_subtiitle.value|striptags }}</div>
  {% endif %}
</div>
  </article>
{% elseif view_mode == "full" %}
<article{{ attributes }}>
  <div class="node-opinie">
  <h3 style="text-transform:uppercase;">
      {% trans %} OPINIE {% endtrans %}
  </h3>
  
  
  <span class="sub-date">
    {% set createdDate = node.getCreatedTime|format_date('short') %}
    {% trans %} {{ createdDate }} {% endtrans %}     
  </span>
  {% if  comment_count is not empty and comment_count != 0 %}
  <a class="counter" href="#comments-" style="color:#000000">{% trans %}reacties {% endtrans %}
    <span class="comment_count">{{ comment_count }}</span>
  </a>
  {% endif %}
  
  <h2 class="news-title">{{ label }}</h2>

  {% if node.field_subtitel_long is not empty %}
    
    {% set subtitle = content.field_subtitel_long|raw %}
    <div class="subtitle"><h3>{{ subtitle }}</h3></div>
  {% else %}
    {% if node.field_subtiitle.value is not empty %}
      <div class="subtitle"><h3>{{ node.field_subtiitle.value|striptags }}</h3></div>
    {% endif %}
  {% endif %}
  


  <div{{ content_attributes }}>
    {{ content.body }}
  </div>
  <div>
  {% if content.field_auteur is not empty %}
      <span class="author">{{ node.field_auteur.value }} </span>
  {% endif %}

  {% if node.field_fotograaf.value is not empty %}
       <br>{% trans %}BEELD:{% endtrans %} <span class="photographer">{{ node.field_fotograaf.value }}</span>
  {% endif %}

  </div>
  <div id="comments-" class="comment-wrapper">
    {% if  comment_count is not empty and comment_count != 0 %}
    <h2 class="title" style="display:inline-block;">{{ '{ Lees de' |trans }}
      <span class="comment_count closed">
      {% if comment_count is not empty %}
      {{ comment_count }}
      {% else %}
        0
      {% endif %}
      </span>&nbsp;{{ 'reacties}' | t }}
    </h2>
    {% endif %}
    <div class="counter">
      {% if node_stats is not empty %}
      hits <span class='comment_count'>
      {{ node_stats }}
      </span>
      {% endif %}
    </div>
      
    <div id="comments-" class="comment-wrapper">
        {{ content.comment_node_opinie }}       
    </div>
  </div>
      
  </div>
  
</article>
{% elseif view_mode == "search_index" %}
  <div class="search_result">
    <h3{{ title_attributes }}>
      <a href="{{ url }}" rel="bookmark">{{ label }}</a>
    </h3>
    {{ content }}
    <p>
      {% if content.field_auteur is not empty %}
          <span class="">{{ node.field_auteur.value }} </span>
      {% endif %} - 
      {% set createdDate = node.getCreatedTime|format_date('short') %}
      {% trans %} {{ createdDate }} {% endtrans %} 
    </p>
  </div>
{% endif %}
